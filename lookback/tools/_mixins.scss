// MIXINS

// Import mixin libraries into this file.

@import "mixins/viewports";

@mixin absolute-header($position: absolute) {
  top: 0;
  left: 0;
  right: 0;
  z-index: 200;
  position: $position;
}

@mixin fixed-header {
  @include absolute-header($position: fixed);
}

@mixin center($direction) {
  display: flex;

  @if($direction == horizontal or $direction == all) {
    text-align: center;
    align-items: center;
  }

  @if($direction == vertical or $direction == all) {
    flex-direction: column;
    justify-content: center;
  }
}

@mixin box {
  background-color: #fff;
  border-radius: $border-radius + 2px;
  border: 1px solid $main-border-color;
}

@mixin placeholder {
  &::-webkit-input-placeholder { /* WebKit browsers */
    @content;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10+ */
    @content;
  }
}

// Font smoothing for WebKit (1) and Firefox (2).
@mixin smooth($enabled: true) {
  @if $enabled {
    -webkit-font-smoothing: antialiased;    // 1
    -moz-osx-font-smoothing: grayscale;     // 2
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased; // 1
    -moz-osx-font-smoothing: auto;                // 2
  }
}

@mixin arrow($size, $color, $direction: up, $height: $size, $width: $size, $equilateral: true) {
  width: 0;
  height: 0;
  border: solid transparent;

  @if $direction == up {
    border-width: 0 $width $height $width;
    border-bottom-color: $color;
    @if $equilateral == true {
      border-bottom-width: $size * 2 * 0.866;
    }
  }
  @if $direction == down {
    border-width: $height $width 0 $width;
    border-top-color: $color;
    @if $equilateral == true {
      border-top-width: $size * 2 * 0.866;
    }
  }
  @if $direction == left {
    border-width: $height $width $height 0;
    border-right-color: $color;
    @if $equilateral == true {
      border-right-width: $size * 2 * 0.866;
    }
  }
  @if $direction == right {
    border-width: $height 0 $height $width;
    border-left-color: $color;
    @if $equilateral == true {
      border-left-width: $size * 2 * 0.866;
    }
  }
}

@mixin arrow-box($position: bottom, $size: 11px, $color: #000, $background-color: #fff, $offset: 0, $padding: $size) {
  position: relative;
  padding: $padding;

  &::before, &::after {
    content: '';
    display: inline-block;
    position: absolute;
    border-style: solid;
    border-color: transparent;
  }

  &::before {
    border-width: $size;
    border-#{$position}-color: $color;
    #{$position}: $offset;

    @if $position == left or $position == right {
      top: calc(50% - #{$size});
    } @else {
      left: calc(50% - #{$size});
    }
  }
  &::after {
    border-width: $size;
    border-#{$position}-color: $background-color;
    #{$position}: $offset - 1px;

    @if $position == left or $position == right {
      top: calc(50% - #{$size});
    } @else {
      left: calc(50% - #{$size});
    }
  }
}

@mixin list-reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

@mixin has-separator($color: $text-color, $width: 15rem, $spacing: 2, $position: after) {
  &::#{$position} {
    content: '';
    display: block;
    border-bottom: 1px solid $color;
    max-width: $width;
    width: 80%;
    margin: $lineheight*$spacing auto;

    @include handheld {
      max-width: 5rem;
      margin: $lineheight auto;
    }
  }
}

@mixin truncate($max: 100%, $display: inline-block) {
  display: $display;
  max-width: $max;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

@mixin fullscreen {
  &:-webkit-full-screen {
    @content;
  }

  &:-moz-full-screen {
    @content;
  }

  &:full-screen {
    @content;
  }

  &:fullscreen {
    @content;
  }
}
